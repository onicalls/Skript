# Funci√≥n que envia items a un cofre
function sendItemToChest2(player: offline player, item: item, itemtype: item type, trap: block):
    loop {chests::*}:
        if inventory of loop-value contains {_itemtype}:
            if loop-value has enough space for {_item}:  
                send "Se ha enviado: %{_item}%" to {_player}
                add {_item} to inventory of loop-value
                remove {_item} from inventory of {_trap}
                stop
            else:
                send "No hay suficiente espacio en el cofre para enviar %{_item}%" to {_player}
                stop

function listContains(list: objects, search: object) :: boolean:
    loop {_list::*}:
        if loop-value is {_search}:
            return true
    return false

function hasRedstone(eventBlock: block):: objects:
    loop blocks in radius 1.5 around {_eventBlock}:
        if loop-block is redstone wire or chest:
            if listContains({checked::*}, loop-block) is false:
                add loop-block to {checked::*}
                hasRedstone(loop-block)
    return {checked::*}


function hasChest(list: objects) :: objects:
    loop {_list::*}:
        if type of loop-value is chest:
            add loop-value to {chests::*}
    return {chests::*}  

on rightclick on trapped chest:
    if player is sneaking:
        clear {checked::*}
        clear {chests::*}
        add event-block to {checked::*}
        set {_path::*} to hasRedstone(event-block)
        set {_chests::*} to hasChest({_path::*})
        loop items in inventory of event-block:
            set {_itemtype} to type of loop-value
            set {_item} to loop-value
            sendItemToChest2(player, {_item}, {_itemtype}, event-block)
